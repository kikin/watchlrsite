<?xml version="1.0" encoding="utf-8"?>
<s:SkinnableContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:gp="com.watchlr.GigaPlayer.*"
		 creationComplete="init()" height="28" width="100%" xmlns:watchlr="com.watchlr.*"
		 xmlns:Components="com.watchlr.GigaPlayer.Components.*" resize="onResize(event)">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.watchlr.GigaPlayer.Components.events.ScrubberEvent;
			import com.watchlr.GigaPlayer.Event.GigaPlayerEvent;
			import com.watchlr.GigaPlayer.GigaPlayer;
			
			import flash.events.KeyboardEvent;
			import flash.utils.*;
			
			import mx.core.FlexGlobals;
			import mx.events.ResizeEvent;
			
			import org.osmf.events.TimeEvent;
			
			protected var _gigaPlayer:GigaPlayer;
			
			/*element positioning constants...*/
			//the width of scrubber relative to container 
			//(i.e. it's width will be container's width minus this val)
			protected var SCRUBBER_WIDTH_REL:Number = 194;
			//left margin for scrubber...
			protected var SCRUBBER_LEFT:Number = 60;
			//the playback time indicator
			protected var TIME_DISPLAY_RIGHT:Number = 70;
			//vol button right margin...
			protected var VOLUME_BUTTON_RIGHT:Number = 45;
			//right offset of volume slider relative to the volume button... 
			protected var VOLUME_SLIDER_RIGHT_OFFSET:Number = 2;
			
			//wish there were a more elegant way to do this...
			protected var mouseOverVolumeSlider:Boolean = false;
			
			protected function init():void{
				
				scrubber.addEventListener(ScrubberEvent.SCRUB, handleScrubberDrag);
				
				//set layout of UI elements
				timeDisplay.right = TIME_DISPLAY_RIGHT;
				volumeButton.right = VOLUME_BUTTON_RIGHT;
				volumeSlider.right = volumeButton.right + VOLUME_SLIDER_RIGHT_OFFSET;
				
				//cursor events
				volumeButton.addEventListener(MouseEvent.ROLL_OVER, showVolumeSlider);
				volumeSlider.addEventListener(MouseEvent.ROLL_OVER, onVolumeSliderMouseOver);
				volumeSlider.addEventListener(MouseEvent.ROLL_OUT, hideVolumeSlider);
				volumeButton.addEventListener(MouseEvent.ROLL_OUT, onVolumeButtonMouseOut);
				
			}
			
			public function set gigaPlayer(val:GigaPlayer):void{
				_gigaPlayer = val;
				//set GigaPlayer refs for all controls...
				playButton.gigaPlayer = _gigaPlayer;
				scrubber.gigaPlayer = _gigaPlayer;
				timeDisplay.gigaPlayer = _gigaPlayer;
				volumeSlider.gigaPlayer = _gigaPlayer;
				
				_gigaPlayer.addEventListener(GigaPlayerEvent.TIME_UPDATED, onTimeChange);
			}
			
			public function get gigaPlayer():GigaPlayer{
				return _gigaPlayer;
			}
			
			protected function onResize(event:ResizeEvent):void{
				timeDisplay.right = TIME_DISPLAY_RIGHT;
				scrubber.width= width - SCRUBBER_WIDTH_REL;
				scrubber.left = SCRUBBER_LEFT;
			}

			protected function handleScrubberDrag(event:ScrubberEvent):void{
				timeDisplay.updateTime(event.time);
			}
			
			protected function onTimeChange(event:GigaPlayerEvent):void{
				if(!scrubber.dragging)
					timeDisplay.updateTime(event.time);
			}
			
			protected function showVolumeSlider(event:MouseEvent):void{
				volumeSlider.visible=true;
			}
			
			protected function hideVolumeSlider(event:MouseEvent):void{
				mouseOverVolumeSlider=false;
				volumeSlider.visible=false;
			}
			
			protected function onVolumeSliderMouseOver(event:MouseEvent):void{
				mouseOverVolumeSlider=true;
			}
			
			protected function onVolumeButtonMouseOut(event:MouseEvent):void{
				setTimeout(function():void{
					if(!mouseOverVolumeSlider){
						volumeSlider.visible=false;
					}
				}, 150);
			}
			
			protected function onClick(event:MouseEvent):void{
				volumeSlider.mute();
			}
			
			public function playPause():void{
				 playButton.playPause();
			}
			
		]]>
	</fx:Script>
	<s:Rect width="100%" height="100%">
		<s:fill><s:SolidColor color="#000000" /></s:fill>
	</s:Rect>
	<Components:PlayButton id="playButton" width="22" height="22" y="3" x="15">
	</Components:PlayButton>
	<Components:Scrubber id="scrubber" left="60" width="90%" top="10">
	</Components:Scrubber>
	<Components:TimeDisplay id="timeDisplay" top="10">		
	</Components:TimeDisplay>
	<Components:VolumeSlider id="volumeSlider" bottom="28" visible="false">
	</Components:VolumeSlider>
	<Components:VolumeButton id="volumeButton" top="3" click="onClick(event)">
	</Components:VolumeButton>
	<Components:FullScreenButton id="fullScreenButton" right="9" top="2">
	</Components:FullScreenButton>
	<s:Rect width="100%" height="100%">
		<s:fill>
			<s:LinearGradient id="bottomPanelGradient" rotation="90">
				<s:entries>
					<s:GradientEntry color="0xEEEEFF" alpha="0.3"/>
					<s:GradientEntry color="0x000000" alpha="0.7"/>
				</s:entries>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
</s:SkinnableContainer>
